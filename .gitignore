# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# next.js build output
.next





## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
/speaker-backend/[Dd]ebug/
/speaker-backend/[Dd]ebugPublic/
/speaker-backend/[Rr]elease/
/speaker-backend/[Rr]eleases/
/speaker-backend/x64/
/speaker-backend/x86/
/speaker-backend/bld/
/speaker-backend/[Bb]in/
/speaker-backend/[Oo]bj/
/speaker-backend/[Ll]og/

# Visual Studio 2015 cache/options directory
/speaker-backend/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
/speaker-backend/[Tt]est[Rr]esult*/
/speaker-backend/[Bb]uild[Ll]og.*

# NUNIT
/speaker-backend/*.VisualState.xml
/speaker-backend/TestResult.xml

# Build Results of an ATL Project
/speaker-backend/[Dd]ebugPS/
/speaker-backend/[Rr]eleasePS/
/speaker-backend/dlldata.c

# DNX
/speaker-backend/project.lock.json
/speaker-backend/project.fragment.lock.json
/speaker-backend/artifacts/

/speaker-backend/*_i.c
/speaker-backend/*_p.c
/speaker-backend/*_i.h
/speaker-backend/*.ilk
/speaker-backend/*.meta
/speaker-backend/*.obj
/speaker-backend/*.pch
/speaker-backend/*.pdb
/speaker-backend/*.pgc
/speaker-backend/*.pgd
/speaker-backend/*.rsp
/speaker-backend/*.sbr
/speaker-backend/*.tlb
/speaker-backend/*.tli
/speaker-backend/*.tlh
/speaker-backend/*.tmp
/speaker-backend/*.tmp_proj
/speaker-backend/*.log
/speaker-backend/*.vspscc
/speaker-backend/*.vssscc
/speaker-backend/.builds
/speaker-backend/*.pidb
/speaker-backend/*.svclog
/speaker-backend/*.scc

# Chutzpah Test files
/speaker-backend/_Chutzpah*

# Visual C++ cache files
/speaker-backend/ipch/
/speaker-backend/*.aps
/speaker-backend/*.ncb
/speaker-backend/*.opendb
/speaker-backend/*.opensdf
/speaker-backend/*.sdf
/speaker-backend/*.cachefile
/speaker-backend/*.VC.db
/speaker-backend/*.VC.VC.opendb

# Visual Studio profiler
/speaker-backend/*.psess
/speaker-backend/*.vsp
/speaker-backend/*.vspx
/speaker-backend/*.sap

# TFS 2012 Local Workspace
/speaker-backend/$tf/

# Guidance Automation Toolkit
/speaker-backend/*.gpState

# ReSharper is a .NET coding add-in
/speaker-backend/_ReSharper*/
/speaker-backend/*.[Rr]e[Ss]harper
/speaker-backend/*.DotSettings.user

# JustCode is a .NET coding add-in
/speaker-backend/.JustCode

# TeamCity is a build add-in
/speaker-backend/_TeamCity*

# DotCover is a Code Coverage Tool
/speaker-backend/*.dotCover

# Visual Studio code coverage results
/speaker-backend/*.coverage
/speaker-backend/*.coveragexml

# NCrunch
/speaker-backend/_NCrunch_*
/speaker-backend/.*crunch*.local.xml
/speaker-backend/nCrunchTemp_*

# MightyMoose
/speaker-backend/*.mm.*
/speaker-backend/AutoTest.Net/

# Web workbench (sass)
/speaker-backend/.sass-cache/

# Installshield output folder
/speaker-backend/[Ee]xpress/

# DocProject is a documentation generator add-in
/speaker-backend/DocProject/buildhelp/
/speaker-backend/DocProject/Help/*.HxT
/speaker-backend/DocProject/Help/*.HxC
/speaker-backend/DocProject/Help/*.hhc
/speaker-backend/DocProject/Help/*.hhk
/speaker-backend/DocProject/Help/*.hhp
/speaker-backend/DocProject/Help/Html2
/speaker-backend/DocProject/Help/html

# Click-Once directory
/speaker-backend/publish/

# Publish Web Output
/speaker-backend/*.[Pp]ublish.xml
/speaker-backend/*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings
# but database connection strings (with potential passwords) will be unencrypted
/speaker-backend/*.pubxml
/speaker-backend/*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
/speaker-backend/PublishScripts/

# NuGet Packages
/speaker-backend/*.nupkg
# The packages folder can be ignored because of Package Restore
/speaker-backend/**/packages/*
# except build/, which is used as an MSBuild target.
/speaker-backend/!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
/speaker-backend/*.nuget.props
/speaker-backend/*.nuget.targets

# Microsoft Azure Build Output
/speaker-backend/csx/
/speaker-backend/*.build.csdef

# Microsoft Azure Emulator
/speaker-backend/ecf/
/speaker-backend/rcf/

# Windows Store app package directories and files
/speaker-backend/AppPackages/
/speaker-backend/BundleArtifacts/
/speaker-backend/Package.StoreAssociation.xml
/speaker-backend/_pkginfo.txt

# Visual Studio cache files
# files ending in .cache can be ignored
/speaker-backend/*.[Cc]ache
# but keep track of directories ending in .cache
/speaker-backend/!*.[Cc]ache/

# Others
/speaker-backend/ClientBin/
/speaker-backend/~$*
/speaker-backend/*~
/speaker-backend/*.dbmdl
/speaker-backend/*.dbproj.schemaview
/speaker-backend/*.jfm
/speaker-backend/*.pfx
/speaker-backend/*.publishsettings
/speaker-backend/node_modules/
/speaker-backend/orleans.codegen.cs

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
/speaker-backend/Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
/speaker-backend/_UpgradeReport_Files/
/speaker-backend/Backup*/
/speaker-backend/UpgradeLog*.XML
/speaker-backend/UpgradeLog*.htm

# SQL Server files
/speaker-backend/*.mdf
/speaker-backend/*.ldf

# Business Intelligence projects
/speaker-backend/*.rdl.data
/speaker-backend/*.bim.layout
/speaker-backend/*.bim_*.settings

# Microsoft Fakes
/speaker-backend/FakesAssemblies/

# GhostDoc plugin setting file
/speaker-backend/*.GhostDoc.xml

# Node.js Tools for Visual Studio
/speaker-backend/.ntvs_analysis.dat

# Visual Studio 6 build log
/speaker-backend/*.plg

# Visual Studio 6 workspace options file
/speaker-backend/*.opt

# Visual Studio LightSwitch build output
/speaker-backend/**/*.HTMLClient/GeneratedArtifacts
/speaker-backend/**/*.DesktopClient/GeneratedArtifacts
/speaker-backend/**/*.DesktopClient/ModelManifest.xml
/speaker-backend/**/*.Server/GeneratedArtifacts
/speaker-backend/**/*.Server/ModelManifest.xml
/speaker-backend/_Pvt_Extensions

# Paket dependency manager
/speaker-backend/.paket/paket.exe
/speaker-backend/paket-files/

# FAKE - F# Make
/speaker-backend/.fake/

# JetBrains Rider
/speaker-backend/.idea/
/speaker-backend/*.sln.iml

# CodeRush
/speaker-backend/.cr/

# Python Tools for Visual Studio (PTVS)
/speaker-backend/__pycache__/
/speaker-backend/*.pyc

# Cake - Uncomment if you are using it
# tools/
